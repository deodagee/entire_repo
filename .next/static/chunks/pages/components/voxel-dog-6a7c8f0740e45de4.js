(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[879],{1422:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/voxel-dog",function(){return n(8623)}])},3928:function(e,t,n){"use strict";n.r(t),n.d(t,{DogContainer:function(){return l},DogSpinner:function(){return s}});var i=n(5893),a=n(7294),o=n(1136),r=n(7747);let s=()=>(0,i.jsx)(o.$,{size:"xl",position:"absolute",left:"50%",top:"50%",ml:"calc(0px - var(--spinner-size) / 2)",mt:"calc(0px - var(--spinner-size))"}),l=(0,a.forwardRef)((e,t)=>{let{children:n}=e;return(0,i.jsx)(r.xu,{ref:t,className:"voxel-dog",m:"auto",mt:["-20px","-60px","-120px"],mb:["-40px","-140px","-200px"],w:[280,480,640],h:[280,480,640],position:"relative",children:n})});t.default=()=>(0,i.jsx)(l,{children:(0,i.jsx)(s,{})})},8623:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return u}});var i=n(5893),a=n(7294),o=n(9477),r=n(9365),s=n(1217),l=n(3928),c=n(3409),d=n.n(c),u=()=>{let e=(0,a.useRef)(),[t,n]=(0,a.useState)(!1),c=(0,a.useRef)(),u=(0,a.useCallback)(()=>{let{current:t}=c,{current:n}=e;if(n&&t){let e=n.clientWidth,i=n.clientHeight;t.setSize(e,i)}},[]),[p,h]=(0,a.useState)(!1),[w,f]=(0,a.useState)(!1);return(0,a.useEffect)(()=>{let{current:t}=e;if(t){let e=t.clientWidth,i=t.clientHeight,a=new o.CP7({antialias:!0,alpha:!0});a.setPixelRatio(window.devicePixelRatio),a.setSize(e,i),a.outputEncoding=o.knz,t.appendChild(a.domElement),c.current=a;let l=new o.xsS,d=new o.Pa4(-.5,1.2,0),u=new o.Pa4(20*Math.sin(.2*Math.PI),8,20*Math.cos(.2*Math.PI)),h=.005*i+5.8,w=new o.iKG(-h,h,h,-h,9.01);w.position.copy(u),w.lookAt(d);let f=new o.Mig(13421772,1);l.add(f);let m=new r.z(w,a.domElement);m.autoRotate=!0,m.enabled=p,m.target=d,(function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{receiveShadow:!0,castShadow:!0},{receiveShadow:i,castShadow:a}=n;return new Promise((n,o)=>{let r=new s.E;r.load(t,t=>{let o=t.scene;o.name="dog",o.position.y=0,o.position.x=0,o.receiveShadow=i,o.castShadow=a,e.add(o),o.traverse(function(e){e.isMesh&&(e.castShadow=a,e.receiveShadow=i)}),n(o)},void 0,function(e){o(e)})})})(l,"/dog.glb",{receiveShadow:!1,castShadow:!1}).then(()=>{b(),n(!1)});let x=null,g=0,b=()=>{if(x=requestAnimationFrame(b),(g=g<=100?g+1:g)<=100){let e=-Math.sqrt(1-Math.pow(g/120-1,4))*Math.PI*20;w.position.y=17,w.position.x=u.x*Math.cos(e)+u.z*Math.sin(e),w.position.z=u.z*Math.cos(e)-u.x*Math.sin(e),w.lookAt(d)}else m.update();a.render(l,w)};return()=>{cancelAnimationFrame(x),a.domElement.remove(),a.dispose()}}},[p]),(0,a.useEffect)(()=>(window.addEventListener("resize",u,!1),()=>{window.removeEventListener("resize",u,!1)}),[u]),(0,i.jsx)(i.Fragment,{children:(0,i.jsxs)("div",{className:d().parentcontainer,children:[(0,i.jsx)(l.DogContainer,{ref:e,children:t&&(0,i.jsx)(l.DogSpinner,{})}),(0,i.jsxs)("div",{children:[(0,i.jsx)("button",{className:d().button,onClick:()=>{w?h(!1):h(!0),f(e=>!e)},children:w?"Release Animation":"Click to control Glb"}),(0,i.jsx)("p",{className:d().paragraph,children:"For The Curious: Click the button to interact with the GLB Image above. Click again to Release controls. A GLB file is a binary file format used for storing 3D models and their associated data. GLB files are widely used in web-based 3D applications, virtual reality (VR) experiences, augmented reality (AR) applications, and game development. They are supported by various 3D software, libraries, and engines, as well as web browsers with WebGL capabilities!"})]})]})})}},3409:function(e){e.exports={parentcontainer:"glb_parentcontainer__Hm3O3",container:"glb_container__i5bIm",button:"glb_button__NGmc1",paragraph:"glb_paragraph__2I0H1"}}},function(e){e.O(0,[737,137,774,888,179],function(){return e(e.s=1422)}),_N_E=e.O()}]);